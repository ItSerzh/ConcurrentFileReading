Data parallelism

Data parallelism is a technique for distributing data-intensive computations across multiple threads to improve performance. The TPL provides mechanisms for partitioning data and executing tasks on each partition.

using System;
using System.Linq;
class Program
{
    static void Main()
    {
        int[] data = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

        // Data parallelism example
        Parallel.ForEach(data, item =>
        {
            Console.WriteLine($"Processing item: {item}, Thread: {Task.CurrentId}");
            // Simulating some data-intensive computation
            Task.Delay(500).Wait();
        });
    }
}

In this example, an array of integers represents data, and Parallel.ForEach is used to process each item concurrently. The Console.WriteLine statement indicates the parallel processing of items and displays the associated thread ID. Data parallelism is particularly useful for scenarios where tasks can be performed independently on different portions of a dataset, allowing for efficient utilization of available resources.